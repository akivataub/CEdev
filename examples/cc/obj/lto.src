	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_itoa
_itoa:
	ld	hl, -9
	call	__frameset
	ld	iy, (ix + 6)
	ld	de, (ix + 9)
	or	a, a
	sbc	hl, hl
	ld	(ix - 3), hl
	lea	hl, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB0_3
	push	de
	pop	iy
	ld	(iy), 48
	ld	(iy + 1), 0
BB0_2:
	ld	sp, ix
	pop	ix
	ret
BB0_3:
	ld	(ix - 6), de
	ld	bc, 1
	ld	l, -10
	ld	(ix - 9), hl
BB0_4:
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB0_6
	lea	hl, iy
	ld	bc, 10
	call	__idivu
	ld	de, (ix - 9)
	ld	d, l
	ld	(ix - 9), de
	mlt	de
	ld	a, e
	ld	de, (ix - 3)
	ld	bc, 1
	add	a, iyl
	or	a, 48
	ld	iy, (ix + 9)
	add	iy, de
	ld	(iy), a
	inc	de
	ld	(ix - 3), de
	push	hl
	pop	iy
	jr	BB0_4
BB0_6:
	ld	iy, (ix + 9)
	ld	de, (ix - 3)
	add	iy, de
	ld	(iy), 0
	ld	c, 1
	ex	de, hl
	call	__ishru
	push	hl
	pop	bc
	dec	iy
	lea	de, iy
BB0_7:
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB0_2
	ld	iy, (ix - 6)
	ld	a, (iy)
	ex	de, hl
	ld	e, (hl)
	ld	(iy), e
	ld	(hl), a
	inc	iy
	ld	(ix - 6), iy
	dec	hl
	ex	de, hl
	dec	bc
	jr	BB0_7
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_main
_main:
	ld	hl, -17
	call	__frameset
	lea	hl, ix - 8
	ld	(ix - 11), hl
	ld	hl, (-851900)
	ld	a, (-851897)
	push	hl
	call	_srand
	pop	hl
	call	_gfx_Begin
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, 100
	push	hl
	ld	hl, 50
	push	hl
	ld	hl, _.str
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 120
	push	hl
	ld	hl, 50
	push	hl
	ld	hl, _.str.1
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 2000
	push	hl
	call	_delay
	pop	hl
BB1_1:
	call	_random
	ld	(ix - 14), hl
	or	a, a
	sbc	hl, hl
	ld	(_guess), hl
	ld	(_digits), hl
	dec	hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	ld	hl, 140
	push	hl
	ld	hl, 50
	push	hl
	ld	hl, _.str.2
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
BB1_2:
	call	_os_GetCSC
	or	a, a
	jr	z, BB1_2
	ld	hl, (ix - 14)
	ld	bc, 100
	call	__iremu
	ld	(ix - 14), hl
	inc	hl
	ld	(ix - 17), hl
BB1_4:
	ld	hl, 100
	push	hl
	ld	hl, 50
	push	hl
	ld	hl, _.str.3
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (_guess)
	ld	de, (ix - 11)
	push	de
	push	hl
	call	_itoa
	pop	hl
	pop	hl
	ld	hl, 120
	push	hl
	ld	hl, 50
	push	hl
	ld	hl, _.str.4
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 120
	push	hl
	ld	hl, 150
	push	hl
	ld	hl, (ix - 11)
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	call	_os_GetCSC
	ld	e, a
	or	a, a
	jr	z, BB1_4
	ld	a, e
	add	a, -18
	cp	a, 19
	jr	c, BB1_8
	ld	a, e
	cp	a, 56
	jr	nz, BB1_10
	ld	hl, (_guess)
	ld	bc, 10
	call	__idivs
	ld	(_guess), hl
	ld	hl, (_digits)
	dec	hl
	jp	BB1_27
BB1_8:
	ld	bc, 0
	ld	c, a
	ld	hl, JTI1_0
	add	hl, bc
	add	hl, bc
	add	hl, bc
	ld	hl, (hl)
	jp	(hl)
BB1_9:
	ld	hl, (_guess)
	ld	bc, 10
	call	__imulu
	ld	de, 3
	jp	BB1_25
BB1_10:
	ld	a, e
	cp	a, 9
	jr	nz, BB1_15
	ld	hl, (_digits)
	ld	bc, 1
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB1_15
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	ld	de, (_guess)
	ld	hl, (ix - 14)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	ld	hl, _.str.5
	jp	p, BB1_14
	ld	hl, (ix - 17)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	ld	hl, _.str.6
	jp	p, BB1_28
BB1_14:
	ld	de, 160
	push	de
	ld	de, 50
	push	de
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	ld	(_guess), hl
	ld	hl, 2000
	push	hl
	call	_delay
	pop	hl
	jp	BB1_4
BB1_15:
	ld	a, e
	cp	a, 55
	jp	nz, BB1_4
	jp	BB1_31
BB1_16:
	ld	hl, (_guess)
	ld	bc, 10
	call	__imulu
	ld	de, 6
	jp	BB1_25
BB1_17:
	ld	hl, (_guess)
	ld	bc, 10
	call	__imulu
	ld	de, 9
	jr	BB1_25
BB1_18:
	ld	hl, (_guess)
	ld	bc, 10
	call	__imulu
	ld	de, 2
	jr	BB1_25
BB1_19:
	ld	hl, (_guess)
	ld	bc, 10
	call	__imulu
	ld	de, 5
	jr	BB1_25
BB1_20:
	ld	hl, (_guess)
	ld	bc, 10
	call	__imulu
	ld	de, 8
	jr	BB1_25
BB1_21:
	ld	hl, (_guess)
	ld	bc, 10
	call	__imulu
	jr	BB1_26
BB1_22:
	ld	hl, (_guess)
	ld	bc, 10
	call	__imulu
	inc	hl
	jr	BB1_26
BB1_23:
	ld	hl, (_guess)
	ld	bc, 10
	call	__imulu
	ld	de, 4
	jr	BB1_25
BB1_24:
	ld	hl, (_guess)
	ld	bc, 10
	call	__imulu
	ld	de, 7
BB1_25:
	add	hl, de
BB1_26:
	ld	(_guess), hl
	ld	hl, (_digits)
	inc	hl
BB1_27:
	ld	(_digits), hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	jp	BB1_4
BB1_28:
	ld	hl, 160
	push	hl
	ld	hl, 50
	push	hl
	ld	hl, _.str.7
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 180
	push	hl
	ld	hl, 50
	push	hl
	ld	hl, _.str.8
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 200
	push	hl
	ld	hl, 50
	push	hl
	ld	hl, _.str.9
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
BB1_29:
	call	_os_GetCSC
	cp	a, 54
	jp	z, BB1_1
	cp	a, 55
	jr	nz, BB1_29
BB1_31:
	call	_gfx_End
	or	a, a
	sbc	hl, hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits
	section	.rodata,"a",@progbits
	private	JTI1_0
JTI1_0:
	dl	BB1_9
	dl	BB1_16
	dl	BB1_17
	dl	BB1_10
	dl	BB1_10
	dl	BB1_10
	dl	BB1_10
	dl	BB1_10
	dl	BB1_18
	dl	BB1_19
	dl	BB1_20
	dl	BB1_10
	dl	BB1_10
	dl	BB1_10
	dl	BB1_10
	dl	BB1_21
	dl	BB1_22
	dl	BB1_23
	dl	BB1_24

	section	.bss,"aw",@nobits
	public	_guess
_guess:
	rb	3

	section	.bss,"aw",@nobits
	public	_digits
_digits:
	rb	3

	section	.rodata,"a",@progbits
	private	_.str
_.str:
	db	"Hello, User Welcome To RNG!", 0

	section	.rodata,"a",@progbits
	private	_.str.1
_.str.1:
	db	"Stands For Random Number Guesser", 0

	section	.rodata,"a",@progbits
	private	_.str.2
_.str.2:
	db	"Press any key to start", 0

	section	.rodata,"a",@progbits
	private	_.str.3
_.str.3:
	db	"Guess the number (1-100):", 0

	section	.rodata,"a",@progbits
	private	_.str.4
_.str.4:
	db	"Your guess: ", 0

	section	.rodata,"a",@progbits
	private	_.str.5
_.str.5:
	db	"Too Low!", 0

	section	.rodata,"a",@progbits
	private	_.str.6
_.str.6:
	db	"Too High!", 0

	section	.rodata,"a",@progbits
	private	_.str.7
_.str.7:
	db	"You Got It!!", 0

	section	.rodata,"a",@progbits
	private	_.str.8
_.str.8:
	db	"Press [2nd] to play again", 0

	section	.rodata,"a",@progbits
	private	_.str.9
_.str.9:
	db	"Press [mode] to exit", 0

	ident	"clang version 15.0.0 (https://github.com/CE-Programming/llvm-project 23b78267b5d376b232475d0805a937e54b61e0d0)"
	extern	_random
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	_srand
	extern	_gfx_SetTextFGColor
	extern	_gfx_Begin
	extern	__ishru
	extern	__idivs
	extern	__idivu
	extern	__setflag
	extern	_gfx_FillScreen
	extern	__iremu
	extern	__Unwind_SjLj_Unregister
	extern	__imulu
	extern	_delay
	extern	_gfx_PrintStringXY
	extern	_os_GetCSC
	extern	_gfx_End
